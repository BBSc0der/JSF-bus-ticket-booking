package com.mycompany.bustickets.entity;
// Generated 2017-06-20 15:53:46 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Trips generated by hbm2java
 */
@Entity
@Table(name="trips"
    ,catalog="busticket"
)
public class Trips  implements java.io.Serializable {


     private Integer idTrip;
     private Routes routes;
     private Date dateOfDeparture;
     private int numberOfSeats;
     private int bookedSeats;
     private BigDecimal price;
     private Set<Tickets> ticketses = new HashSet<Tickets>(0);

    public Trips() {
    }

	
    public Trips(Routes routes, Date dateOfDeparture, int numberOfSeats, int bookedSeats, BigDecimal price) {
        this.routes = routes;
        this.dateOfDeparture = dateOfDeparture;
        this.numberOfSeats = numberOfSeats;
        this.bookedSeats = bookedSeats;
        this.price = price;
    }
    public Trips(Routes routes, Date dateOfDeparture, int numberOfSeats, int bookedSeats, BigDecimal price, Set<Tickets> ticketses) {
       this.routes = routes;
       this.dateOfDeparture = dateOfDeparture;
       this.numberOfSeats = numberOfSeats;
       this.bookedSeats = bookedSeats;
       this.price = price;
       this.ticketses = ticketses;
    }
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idTrip", unique=true, nullable=false)
    public Integer getIdTrip() {
        return this.idTrip;
    }
    
    public void setIdTrip(Integer idTrip) {
        this.idTrip = idTrip;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="idRoute", nullable=false)
    public Routes getRoutes() {
        return this.routes;
    }
    
    public void setRoutes(Routes routes) {
        this.routes = routes;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dateOfDeparture", nullable=false, length=19)
    public Date getDateOfDeparture() {
        return this.dateOfDeparture;
    }
    
    public void setDateOfDeparture(Date dateOfDeparture) {
        this.dateOfDeparture = dateOfDeparture;
    }

    
    @Column(name="numberOfSeats", nullable=false)
    public int getNumberOfSeats() {
        return this.numberOfSeats;
    }
    
    public void setNumberOfSeats(int numberOfSeats) {
        this.numberOfSeats = numberOfSeats;
    }

    
    @Column(name="bookedSeats", nullable=false)
    public int getBookedSeats() {
        return this.bookedSeats;
    }
    
    public void setBookedSeats(int bookedSeats) {
        this.bookedSeats = bookedSeats;
    }

    
    @Column(name="price", nullable=false, precision=10)
    public BigDecimal getPrice() {
        return this.price;
    }
    
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="trips")
    public Set<Tickets> getTicketses() {
        return this.ticketses;
    }
    
    public void setTicketses(Set<Tickets> ticketses) {
        this.ticketses = ticketses;
    }

    @Override
    public String toString() {
        return "Trips{" + "idTrip=" + idTrip + ", routes=" + routes + ", dateOfDeparture=" + dateOfDeparture + ", numberOfSeats=" + numberOfSeats + ", bookedSeats=" + bookedSeats + ", price=" + price + ", ticketses=" + ticketses + '}';
    }

    public Trips cloneWithoutId(){
        return new Trips(routes, dateOfDeparture, numberOfSeats, bookedSeats, price);
    }




}


