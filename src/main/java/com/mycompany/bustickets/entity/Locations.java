package com.mycompany.bustickets.entity;
// Generated 2017-06-20 15:53:46 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Locations generated by hbm2java
 */
@Entity
@Table(name="locations"
    ,catalog="busticket"
)
public class Locations  implements java.io.Serializable {


     private Integer idLocation;
     private String city;
     private String street;
     private Set<Tickets> ticketsesForFrom = new HashSet<Tickets>(0);
     private Set<Tickets> ticketsesForTo = new HashSet<Tickets>(0);
     private Set<Routeslocations> routeslocationses = new HashSet<Routeslocations>(0);

    public Locations() {
    }

	
    public Locations(String city, String street) {
        this.city = city;
        this.street = street;
    }
    public Locations(String city, String street, Set<Tickets> ticketsesForFrom, Set<Tickets> ticketsesForTo, Set<Routeslocations> routeslocationses) {
       this.city = city;
       this.street = street;
       this.ticketsesForFrom = ticketsesForFrom;
       this.ticketsesForTo = ticketsesForTo;
       this.routeslocationses = routeslocationses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idLocation", unique=true, nullable=false)
    public Integer getIdLocation() {
        return this.idLocation;
    }
    
    public void setIdLocation(Integer idLocation) {
        this.idLocation = idLocation;
    }

    
    @Column(name="city", nullable=false, length=100)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="street", nullable=false, length=100)
    public String getStreet() {
        return this.street;
    }
    
    public void setStreet(String street) {
        this.street = street;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="locationsByFrom")
    public Set<Tickets> getTicketsesForFrom() {
        return this.ticketsesForFrom;
    }
    
    public void setTicketsesForFrom(Set<Tickets> ticketsesForFrom) {
        this.ticketsesForFrom = ticketsesForFrom;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="locationsByTo")
    public Set<Tickets> getTicketsesForTo() {
        return this.ticketsesForTo;
    }
    
    public void setTicketsesForTo(Set<Tickets> ticketsesForTo) {
        this.ticketsesForTo = ticketsesForTo;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="locations")
    public Set<Routeslocations> getRouteslocationses() {
        return this.routeslocationses;
    }
    
    public void setRouteslocationses(Set<Routeslocations> routeslocationses) {
        this.routeslocationses = routeslocationses;
    }

    @Override
    public String toString() {
        return this.city;
    }
    @Override
    public boolean equals(Object other) {
        return (idLocation != null && other != null && getClass() == other.getClass())
         ? idLocation.equals(((Locations) other).idLocation)
         : (other == this);
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 47 * hash + Objects.hashCode(this.city);
        return hash;
    }


}


